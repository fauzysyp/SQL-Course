<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/fauzi/Documents/1Project/Linkedin Learning/SQL/Ex_Files_SQL_EssT/Ex_Files_SQL_EssT/Exercise Files/WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3930"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="10" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainTrack"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="219"/><column index="3" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="147"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="71"/><column index="3" value="83"/><column index="4" value="294"/><column index="5" value="264"/><column index="6" value="132"/><column index="7" value="44"/><column index="8" value="96"/><column index="9" value="80"/><column index="10" value="128"/><column index="11" value="122"/><column index="12" value="183"/><column index="13" value="98"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="112"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="83"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="80"/><column index="7" value="96"/><column index="8" value="116"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="67"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PlaylistTrack" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="67"/><column index="2" value="56"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="145"/><column index="3" value="61"/><column index="4" value="90"/><column index="5" value="59"/><column index="6" value="190"/><column index="7" value="84"/><column index="8" value="77"/><column index="9" value="65"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_AverageTotal" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="218"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_Joins" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="65"/><column index="3" value="64"/><column index="4" value="134"/><column index="5" value="204"/><column index="6" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: This is the structure of basic QUERY
*/
</sql><sql name="SQL 2">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: This query display all customer first, last name, and email adress
*/
SELECT
 FirstName AS [Customer First Name],
 LastName AS [Customer Family Name],
 Email 
FROM
 Customer
ORDER BY
 FirstName ASC,
 LastName ASC
LIMIT 10
 </sql><sql name="SQL 3">/* Track Table Execise */

SELECT
 Name AS [Track Name],
 UnitPrice AS [Price]
FROM
 Track AS t

LIMIT 20
 </sql><sql name="SQL 4">
SELECT
 InvoiceDate,
 BillingAddress,
 BillingCity,
 total
FROM
 Invoice
WHERE BillingCity IN ('Brussels', 'Orlando', 'Paris')
ORDER BY
 InvoiceDate</sql><sql name="SQL 5">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: How many invoice from billing city with letter B
*/


SELECT
 InvoiceDate,
 BillingAddress,
 BillingCity,
 total
FROM
 Invoice
WHERE BillingCity LIKE 'B%'
ORDER BY
 InvoiceDate
</sql><sql name="SQL 6">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Get a invoice billed after 2010-05-22 and have a total less than $3
*/
SELECT
 InvoiceDate,
 BillingAddress,
 BillingCity,
 total
FROM
 Invoice
WHERE
 DATE (InvoiceDate) &gt; '2010-05-22' AND total &lt; 3.00
ORDER BY
 InvoiceDate
</sql><sql name="SQL 7">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Get all invoice who's billing city is started with P or starts with D?
PENDAS= Parentheses, exponents, multiplication/division,Adsition/Subtraction
BENDAS = Brackets, Exponents, multiplication/division,Adsition/Subtraction
*/
SELECT
 InvoiceDate,
 BillingAddress,
 BillingCity,
 total
FROM
 Invoice
WHERE
 total &gt; 1.98 AND (BillingCity LIKE 'P%' OR BillingCity LIKE 'D%')
ORDER BY
 InvoiceDate
</sql><sql name="SQL 8">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: WSDA Music sales goal they want as many customer as possible to spend between $7.00 and $15.00

Sales categories:
Baseline purchase: Between $0.00 and $1.98
Low purchase: Between $2.00 and $6.99
Target Purchase: Between $7.00 and $15.00
Top performer: Above $15.00

PEDMAS = Parentheses, Exponents, Multiplication/Division, Addition/Subtraction
BEDMAS = Brackets, Exponents, Multiplication/Division, Addition/Subtraction
*/

SELECT
    InvoiceDate,
    BillingAddress,
    BillingCity,
    total,
    CASE
        WHEN total &lt; 2.00 THEN 'Baseline Purchase'
        WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
        WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
        ELSE 'Top Performer'
    END AS PurchaseType
FROM
    Invoice
WHERE
	PurchaseType = 'Top Performer'
ORDER BY
    InvoiceDate;
</sql><sql name="SQL 9">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: JOINS
*/
SELECT
	C.LastName,
	C.FirstName,
	I.InvoiceId,
	I.CustomerId,
	I.InvoiceDate,
	I.total
FROM
	Invoice AS I
INNER JOIN
	Customer AS C
ON
	I.CustomerId = C.CustomerId
ORDER BY C.CustomerId</sql><sql name="SQL 10">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: JOINS on more than two tables, what employee are responsible for the 10 highest individual sales?
*/ 
SELECT
	E.FirstName,
	E.LastName,
	E.EmployeeId,
	C.FirstName,
	C.LastName,
	C.SupportRepId,
	I.CustomerId,
	I.total
FROM
	Invoice AS I
INNER JOIN
	Customer AS C
ON
	I.CustomerId = C.CustomerId	
INNER JOIN
	Employee AS E
ON
	C.SupportRepId = E.EmployeeId
ORDER BY
	i.total DESC
LIMIT 10</sql><sql name="SQL 11">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Create mailling list of US State
*/ 

SELECT
	FirstName,
	LastName,
	Address,
	FirstName||' '||LastName||' '||Address||', '||City||''||State||' '||PostalCode AS [Mailing Address],
	length(PostalCode),
	substr(PostalCode,1,5) AS [5 Digit Postal Code],
	upper (FirstName) AS [First Name ALL Caps],
	lower(LastName) AS [Last Name ALL Lower]
FROM
	Customer
WHERE
	Country = 'USA'
	</sql><sql name="SQL 12">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Calculate the all ages of Employee
*/ 

SELECT
	FirstName,
	LastName,
	BirthDate,
	strftime('%Y-%m-%d',BirthDate) AS [Birthdat NO Timecode],
	strftime ('%Y-%m-%d','now')- strftime('%Y-%m-%d',BirthDate) AS [Age]
FROM
	Employee</sql><sql name="SQL 13">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Aggregate fuction|What our all time global sales?
*/ 

SELECT
	Sum (total) AS [Total Sales],
	round(AVG (total),2) AS [Average Sales],
	max (total) AS [Maximum Sales],
	MIN (total) AS [Minimum Sales],
	count (*) AS [Sales Count]
FROM
	Invoice</sql><sql name="SQL 14">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Group in SQL | What are the average invoice totals by Country? Greater than $5 and City Started with B?
*/ 

SELECT
	BillingCountry AS Country,
	BillingCity AS City,
	round(avg(total),2) AS [Average Sales]
FROM
	Invoice
WHERE
	City LIKE 'B%'
GROUP BY
	Country, City
HAVING
	[Average Sales] &gt; 5.00
ORDER BY
	Country ASC;</sql><sql name="SQL 15">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Subqueries  | Gather data about all invoices that are less than this average?
*/ 

SELECT
	round(AVG(total),2) AS [Average total]
FROM
	Invoice

	
	
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	total &lt;
	(select AVG(total) from Invoice)
ORDER BY
	total DESC;</sql><sql name="SQL 16">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Subqueries in the select | How is each individual city performing against the global average sales?
*/ 

SELECT
	BillingCity AS City,
	round (Avg(total),2) AS [City Average Sales],
	round((SELECT avg(total) from invoice),2) AS [Global Average]
FROM
	Invoice
GROUP BY
	BillingCity
ORDER BY
	BillingCity</sql><sql name="SQL 17">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Subqueriees without agregate functions
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM
	Invoice
WHERE
	InvoiceDate &gt;
(SELECT 
	InvoiceDate
FROM
	Invoice
WHERE
	InvoiceId = 251)</sql><sql name="SQL 18">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Returning multiple valus from a subqueries
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM
	Invoice
WHERE
	InvoiceDate IN
(SELECT
	InvoiceDate
FROM
	Invoice
WHERE
	InvoiceId IN (251,252,254))</sql><sql name="SQL 19">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Subqueries and DISTINCT |Which tracks ar not selling?
*/

SELECT
	TrackId,
	Composer,
	Name
FROM
	Track
WHERE
	TrackId NOT IN
(SELECT
	DISTINCT
	TrackId
FROM
	InvoiceLine
ORDER BY
	TrackId)</sql><sql name="SQL 20">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Views
*/

CREATE VIEW V_AverageTotal AS
SELECT
	round(avg(total),2) AS [Average Total]
FROM
	Invoice</sql><sql name="Edit View V_AverageTotal">DROP VIEW &quot;main&quot;.&quot;V_AverageTotal&quot;;
CREATE VIEW V_AverageTotal AS
SELECT
	avg(total) AS [Average Total]
FROM
	Invoice</sql><sql name="SQL 22">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Views and Joins
*/

CREATE VIEW V_Joins AS
SELECT
	il.InvoiceId,
	il.UnitPrice,
	il.Quantity,
	t.Name,
	t.Composer,
	t.Milliseconds
FROM
	InvoiceLine il
INNER JOIN
	Track t
ON
	il.TrackId = t.TrackId</sql><sql name="SQL 23">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: Deleting View
*/

DROP VIEW
	V_AverageTotal</sql><sql name="SQL 25">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: DML | Inserting Data
*/

INSERT INTO
	Artist(Name)
VALUES ('Bob Marley')</sql><sql name="SQL 26">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: DML | Updating Data
*/

UPDATE 
	Artist
SET Name = 'Damian Marley'
WHERE
	ArtistId = 276</sql><sql name="SQL 27">/* 
Created by Muhammad Fauzy Syaputra, 27/05/2024 
Description: DML | Deleting DATABASE
*/

DELETE FROM
	Artist
WHERE
	ArtistId = 276

</sql><sql name="SQL 28"></sql><current_tab id="26"/></tab_sql></sqlb_project>
